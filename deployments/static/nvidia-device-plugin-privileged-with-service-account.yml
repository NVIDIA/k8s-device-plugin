# Copyright (c) 2023, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# == ABOUT THIS STATIC DEPLOYMENT
#
# The pod needs to run with privileged security context to be able to
# mount a hostPath volume. To avoid granting permissions too broadly,
# it is safer to deploy the pod in its own namespace with its own service
# account.
#
# This static deployment is aimed at OpenShift and creates:
#
#   - A namespace with the labels for the PodSecurity admission webhook
#   - A role that grants the read nodes resources and use the privileged
#     security context constraints (SCC) in Microshift.
#   - A service account that the pod will use to run in the namespace.
#   - A role binding to link the cluster role and the service account in
#     the scope of the namespace.
#   - The device plugin daemon set with the privileged security context
#     and the service account.
#
# The other attributes of the device plugin daemon set are unchanged from
# the standard static deployment definition with compatibility with CPU
# Manager.
#
# To deploy it in Microshift, simply put this file in
# /etc/microshift/manifests and add the file to the list of resources in
# your Kustomization resource.
#
# See Microshift documentation for more details on the automated
# deployment of resources:
# https://access.redhat.com/documentation/en-us/red_hat_build_of_microshift/
#

---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    pod-security.kubernetes.io/enforce: privileged
  name: nvidia-device-plugin

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nvidia-device-plugin
  namespace: nvidia-device-plugin
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - security.openshift.io
    resourceNames:
      - privileged
    resources:
      - securitycontextconstraints
    verbs:
      - use

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nvidia-device-plugin
  namespace: nvidia-device-plugin

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nvidia-device-plugin
  namespace: nvidia-device-plugin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nvidia-device-plugin
subjects:
  - kind: ServiceAccount
    name: nvidia-device-plugin
    namespace: nvidia-device-plugin

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nvidia-device-plugin-daemonset
  namespace: nvidia-device-plugin
spec:
  selector:
    matchLabels:
      name: nvidia-device-plugin-ds
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: nvidia-device-plugin-ds
    spec:
      tolerations:
        - key: nvidia.com/gpu
          operator: Exists
          effect: NoSchedule
      priorityClassName: "system-node-critical"
      containers:
        - env:
            - name: PASS_DEVICE_SPECS
              value: "true"
          image: nvcr.io/nvidia/k8s-device-plugin:v0.15.0-rc.1
          name: nvidia-device-plugin-ctr
          securityContext:
            privileged: true
          volumeMounts:
            - name: device-plugin
              mountPath: /var/lib/kubelet/device-plugins
      serviceAccountName: nvidia-device-plugin
      volumes:
        - name: device-plugin
          hostPath:
            path: /var/lib/kubelet/device-plugins
